%% Enter valid start and goal points
p = 1;
q = 0;
prompt = 'Enter the x coordinate of start point';
 

x(p) = input(prompt);
prompt = 'Enter the y coordinate of start point';
y(p) = input(prompt);

NodeInfo(:,p)= q; %NodesInfo will save the value of parent node
q = 1;


goal = 'Enter the x coordinate of goal point';
xg = input(goal);
goal = 'Enter the y coordinate of goal point';
yg = input(goal);
[a] = constrains(x(p),y(p));
[b] = constrains(xg,yg);
if ((a == 0))&& ((b == 0))


%% the section plot the configuration of the given space.
xp =[120 158 165 188 168 145 120];
yp =[55 51 89 51 14 14 55];
plot(xp,yp,'Color','k','LineWidth',.5)
hold on;
xr = [55 55 105 105 55];
yr = [67.5 112.5 112.5 67.5 67.5];
plot(xr,yr,'Color','k','LineWidth',.5)
hold on;
axis([0 250 0 250])
center = [180,120];
viscircles(center,15,'Color','k','LineWidth',.5)
rectangle('Position',[0 0 250 150],'LineWidth',1)

axis equal;
 
%% While loop calculates various nodes generated by any parent node q. It will terminate when the generated point is equal to goal point.



while (x(p)~= xg)|| (y(p)~=yg)

     
[xtl] = moveleft(x(q));
ytl = y(q);
t = 0;
tc= 0;
for i = 1:p
    if (x(i) == xtl) && (y(i) == ytl)
        t = t+1;
    end
end 
[tc] = constrains(xtl,ytl);
if (tc ==0) && (t==0)
    p = p+1;
    x(p) = xtl;
    y(p) = ytl;
    NodeInfo(:,p) = q;

    if (x(p) == xg) && (y(p) == yg)
        break
    end
end



xtr = moveright(x(q));
ytr = y(q);
t=0;
tc=0;
for i = 1:p
    if (x(i) == xtr) && (y(i) == ytr)
        t=t+1;
    end
end
[tc] = constrains(xtr,ytr)
if (tc==0) && (t==0)
    p = p+1;
    x(p) = xtr;
    y(p) = ytr;
    NodeInfo(:,p) = q;
    if (x(p) == xg) && (y(p) == yg)
        break
    end
end
 

xtu = x(q);
ytu = moveup(y(q));
t=0;
tc=0;
for i = 1:p
    if (x(i) == xtu) && (y(i) == ytu)
        t=t+1;
    end
end
[tc] = constrains(xtu,ytu)
if (tc==0) && (t == 0)
    p = p+1;
    x(p) = xtu;
    y(p) = ytu;
    NodeInfo(:,p) = q;

    if (x(p) == xg) && (y(p) == yg)
        break
    end
end

xtd = x(q);
ytd = movedown(y(q));
t=0;
tc=0;
for i = 1:p
    if (x(i) == xtd) && (y(i) == ytd)
        t=t+1;
    end
end
[tc] = constrains(xtu,ytu)
if (tc==0) && (t == 0)
    p = p+1;
    x(p) = xtd;
    y(p) = ytd;
    NodeInfo(:,p) = q;

    if (x(p) == xg) && (y(p) == yg)
        break
    end
end

[xtul,ytul] = moveupleft(x(q),y(q));
t=0;
tc=0;
for i = 1:p
    if (x(i) == xtul) && (y(i) == ytul)
        t=t+1;
    end
end
[tc] = constrains(xtul,ytul)
if (tc==0) && (t == 0)
    p = p+1;
    x(p) = xtul;
    y(p) = ytul;
    NodeInfo(:,p) = q;

    if (x(p) == xg) && (y(p) == yg)
        break
    end
end


[xtur,ytur] = moveupright(x(q),y(q));
t=0;
tc=0;
for i = 1:p
    if (x(i) == xtur) && (y(i) == ytur)
        t=t+1;
    end
end
[tc] = constrains(xtur,ytur)
if (tc==0) && (t == 0)
    p = p+1;
    x(p) = xtur;
    y(p) = ytur;
    NodeInfo(:,p) = q;

    if (x(p) == xg) && (y(p) == yg)
        break
    end
end


[xtdl,ytdl] = movedownleft(x(q),y(q));
t=0;
tc=0;
for i = 1:p
    if (x(i) == xtdl) && (y(i) == ytdl)
        t=t+1;
    end
end
[tc] = constrains(xtdl,ytdl)
if (tc==0) && (t == 0)
    p = p+1;
    x(p) = xtdl;
    y(p) = ytdl;
    NodeInfo(:,p) = q;
%     plot(x(p),y(p),'+')
%     hold on;
    if (x(p) == xg) && (y(p) == yg)
        break
    end
end

[xtdr,ytdr] = movedownright(x(q),y(q));
t=0;
tc=0;
for i = 1:p
    if (x(i) == xtdr) && (y(i) == ytdr)
        t=t+1;
    end
end
[tc] = constrains(xtdr,ytdr)
if (tc==0) && (t == 0)
    p = p+1;
    x(p) = xtdr;
    y(p) = ytdr;
    NodeInfo(:,p) = q;

    if (x(p) == xg) && (y(p) == yg)
        break
    end
end
q=q+1;
end
 %% plots the start point
 plot(x(1),y(1),'o')
hold on;
%% Plots the goal point
plot(xg,yg,'*')
hold on;
%% the for loop plots the obtained nodes on the configuration space. 
 for i = 1:p
     sz = .5;
     scatter(x(i),y(i),sz,'y')
     hold on;
     pause(.0000005)
 end
 %% The following for loop finds the optimal path and then plots it on the configuration space.
 s = p;
 while (x(s) ~= x(1)) || (y(s)~= y(1))
    
     sz = .5;
     scatter(x(s),y(s),sz,'r')
     pause(.1)
     s = NodeInfo(p);
     p = s;
 end
else 
    disp('Points are not valid')
end 
